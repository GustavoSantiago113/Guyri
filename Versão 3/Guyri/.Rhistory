filter(Capim == "Decumbens")
segCorteBriza <- segCorte %>%
filter(Capim == "Brizantha")
# Gráficos de Barras Duplas (1 e 2 corte) para Clorofila e Massa seca
Decumbens_graph <- Decumbens %>%
group_by(Tratamento, Corte) %>%
summarise(
media_MS = mean(MS, na.rm=TRUE),
media_Clorofila = mean(Clorofila, na.rm=TRUE),
limite_Superior_MS = mean(MS, na.rm=TRUE) + sd(MS, na.rm=TRUE),
limite_Superior_Cl = mean(Clorofila, na.rm=TRUE) + sd(Clorofila, na.rm=TRUE),
limite_Inferior_MS = mean(MS, na.rm=TRUE) - sd(MS, na.rm=TRUE),
limite_Inferior_Cl = mean(Clorofila, na.rm=TRUE) - sd(Clorofila, na.rm=TRUE)
)
Brizantha_graph <- Brizantha %>%
group_by(Tratamento, Corte) %>%
summarise(
media_MS = mean(MS, na.rm=TRUE),
media_Clorofila = mean(Clorofila, na.rm=TRUE),
limite_Superior_MS = mean(MS, na.rm=TRUE) + sd(MS, na.rm=TRUE),
limite_Superior_Cl = mean(Clorofila, na.rm=TRUE) + sd(Clorofila, na.rm=TRUE),
limite_Inferior_MS = mean(MS, na.rm=TRUE) - sd(MS, na.rm=TRUE),
limite_Inferior_Cl = mean(Clorofila, na.rm=TRUE) - sd(Clorofila, na.rm=TRUE)
)
p1 <- Decumbens_graph %>%
ggplot(aes(x = Tratamento, y = media_MS, fill = Corte))+
geom_bar(stat = "identity", position = "dodge")+
labs(y= "Massa Seca (g)")+
geom_errorbar(aes(ymin = limite_Inferior_MS, ymax = limite_Superior_MS), width = 0.2, position = position_dodge(.9))+
theme(axis.text.x = element_text(size = 5, color = 'black'),
legend.position = 'top',
legend.key.size = unit(0.2, 'cm'),
legend.title = element_text(size=7, color = 'black'),
legend.text = element_text(size=7, color = 'black'),
axis.text.y = element_text(size = 5, color = 'black'),
axis.title.x = element_text(size = 7, color = 'black'),
axis.title.y = element_text(size = 7, color = 'black'))
p2 <- Decumbens_graph %>%
ggplot(aes(x = Tratamento, y = media_Clorofila, fill = Corte))+
geom_bar(stat = "identity", position = "dodge")+
labs(y= "IRC")+
geom_errorbar(aes(ymin = limite_Inferior_Cl, ymax = limite_Superior_Cl), width = 0.2, position = position_dodge(.9))+
theme(axis.text.x = element_text(size = 5, color = 'black'),
axis.text.y = element_text(size = 5, color = 'black'),
legend.position = 'top',
legend.key.size = unit(0.2, 'cm'),
legend.title = element_text(size=7, color = 'black'),
legend.text = element_text(size=7, color = 'black'),
axis.title.y = element_text(size = 7, color = 'black'),
axis.title.x = element_text(size = 7, color = 'black'))
ggsave("Decumbens.jpg", plot_grid(p1, p2, ncol = 1))
p3 <- Brizantha_graph %>%
ggplot(aes(x = Tratamento, y = media_MS, fill = Corte))+
geom_bar(stat = "identity", position = "dodge")+
labs(y= "Massa Seca (g)")+
geom_errorbar(aes(ymin = limite_Inferior_MS, ymax = limite_Superior_MS), width = 0.2, position = position_dodge(.9))+
theme(axis.text.x = element_text(size = 5, color = 'black'),
axis.text.y = element_text(size = 5, color = 'black'),
legend.position = 'top',
legend.key.size = unit(0.2, 'cm'),
legend.title = element_text(size=7, color = 'black'),
legend.text = element_text(size=7, color = 'black'),
axis.title.y = element_text(size = 7, color = 'black'),
axis.title.x = element_text(size = 7, color = 'black'))
p4 <- Brizantha_graph %>%
ggplot(aes(x = Tratamento, y = media_Clorofila, fill = Corte))+
geom_bar(stat = "identity", position = "dodge")+
labs(y= "IRC")+
geom_errorbar(aes(ymin = limite_Inferior_Cl, ymax = limite_Superior_Cl), width = 0.2, position = position_dodge(.9))+
theme(axis.text.x = element_text(size = 5, color = 'black'),
axis.text.y = element_text(size = 5, color = 'black'),
legend.position = 'top',
legend.key.size = unit(0.2, 'cm'),
legend.title = element_text(size=7, color = 'black'),
legend.text = element_text(size=7, color = 'black'),
axis.title.y = element_text(size = 7, color = 'black'),
axis.title.x = element_text(size = 7, color = 'black'))
ggsave("Brizantha.jpg",plot_grid(p3, p4,ncol = 1))
# Grafico de violino para o restante
#Area Foliar
p5<-ggplot(priCorte, aes(x = Tratamento, y = Area.Foliar, fill = Capim)) +
geom_boxplot(width = 0.07, position = position_dodge(width = 0.9))+
theme(axis.text.x = element_text(size = 5), color = 'black',
axis.text.y = element_text(size = 5, color = 'black'),
legend.position = 'top',
legend.key.size = unit(0.2, 'cm'),
legend.title = element_text(size=7, color = 'black'),
legend.text = element_text(size=7, color = 'black'),
axis.title.y = element_text(size = 7, color = 'black'),
axis.title.x = element_text(size = 7, color = 'black'),
title = element_text(size = 9))+
labs(title = "Area Foliar", y= "Area Foliar (m2)")
#Umidade
p6<-ggplot(priCorte, aes(x = Tratamento, y = Umidade, fill = Capim)) +
geom_boxplot(width = 0.07, position = position_dodge(width = 0.9))+
theme(axis.text.x = element_text(size = 5, color = 'black'),
axis.text.y = element_text(size = 5, color = 'black'),
legend.position = 'top',
legend.key.size = unit(0.2, 'cm'),
legend.title = element_text(size=7, color = 'black'),
legend.text = element_text(size=7, color = 'black'),
axis.title.y = element_text(size = 7, color = 'black'),
axis.title.x = element_text(size = 7, color = 'black'),
title = element_text(size = 9))+
labs(title = "Umidade", y= "Umidade (%)")
#Perfilhos
p7<-ggplot(priCorte, aes(x = Tratamento, y = Perfilhos, fill = Capim)) +
geom_boxplot(width = 0.07, position = position_dodge(width = 0.9))+
theme(axis.text.x = element_text(size = 5, color = 'black'),
axis.text.y = element_text(size = 5, color = 'black'),
legend.position = 'top',
legend.key.size = unit(0.2, 'cm'),
legend.title = element_text(size=7, color = 'black'),
legend.text = element_text(size=7, color = 'black'),
axis.title.y = element_text(size = 7, color = 'black'),
axis.title.x = element_text(size = 7, color = 'black'),
title = element_text(size = 9))+
labs(title = "Número de Perfilhos")
ggsave("Outras.jpg",plot_grid(p5, p6, p7, ncol = 1))
ggsave("Outras.jpg",plot_grid(p5, p6, p7, ncol = 1))
ggsave("Outras.jpg",plot_grid(p5, p6, p7, ncol = 1))
ggsave("Outras.jpg",plot_grid(p5, p6, p7, ncol = 1))
ggplot(priCorte, aes(x = Tratamento, y = Area.Foliar, fill = Capim)) +
geom_boxplot(width = 0.07, position = position_dodge(width = 0.9))+
theme(axis.text.x = element_text(size = 5), color = 'black',
axis.text.y = element_text(size = 5, color = 'black'),
legend.position = 'top',
legend.key.size = unit(0.2, 'cm'),
legend.title = element_text(size=7, color = 'black'),
legend.text = element_text(size=7, color = 'black'),
axis.title.y = element_text(size = 7, color = 'black'),
axis.title.x = element_text(size = 7, color = 'black'),
title = element_text(size = 9))+
labs(title = "Area Foliar", y= "Area Foliar (m2)")
p5<-ggplot(priCorte, aes(x = Tratamento, y = Area.Foliar, fill = Capim)) +
geom_boxplot(width = 0.07, position = position_dodge(width = 0.9))+
theme(axis.text.x = element_text(size = 5, color = 'black'),
axis.text.y = element_text(size = 5, color = 'black'),
legend.position = 'top',
legend.key.size = unit(0.2, 'cm'),
legend.title = element_text(size=7, color = 'black'),
legend.text = element_text(size=7, color = 'black'),
axis.title.y = element_text(size = 7, color = 'black'),
axis.title.x = element_text(size = 7, color = 'black'),
title = element_text(size = 9))+
labs(title = "Area Foliar", y= "Area Foliar (m2)")
#Umidade
p6<-ggplot(priCorte, aes(x = Tratamento, y = Umidade, fill = Capim)) +
geom_boxplot(width = 0.07, position = position_dodge(width = 0.9))+
theme(axis.text.x = element_text(size = 5, color = 'black'),
axis.text.y = element_text(size = 5, color = 'black'),
legend.position = 'top',
legend.key.size = unit(0.2, 'cm'),
legend.title = element_text(size=7, color = 'black'),
legend.text = element_text(size=7, color = 'black'),
axis.title.y = element_text(size = 7, color = 'black'),
axis.title.x = element_text(size = 7, color = 'black'),
title = element_text(size = 9))+
labs(title = "Umidade", y= "Umidade (%)")
#Perfilhos
p7<-ggplot(priCorte, aes(x = Tratamento, y = Perfilhos, fill = Capim)) +
geom_boxplot(width = 0.07, position = position_dodge(width = 0.9))+
theme(axis.text.x = element_text(size = 5, color = 'black'),
axis.text.y = element_text(size = 5, color = 'black'),
legend.position = 'top',
legend.key.size = unit(0.2, 'cm'),
legend.title = element_text(size=7, color = 'black'),
legend.text = element_text(size=7, color = 'black'),
axis.title.y = element_text(size = 7, color = 'black'),
axis.title.x = element_text(size = 7, color = 'black'),
title = element_text(size = 9))+
labs(title = "Número de Perfilhos")
ggsave("Outras.jpg",plot_grid(p5, p6, p7, ncol = 1))
ggsave("Outras.jpg",plot_grid(p5, p6, p7, ncol = 1))
ggplot(priCorte, aes(x = Tratamento, y = Umidade, fill = Capim)) +
geom_boxplot(width = 0.07, position = position_dodge(width = 0.9))+
theme(axis.text.x = element_text(size = 5, color = 'black'),
axis.text.y = element_text(size = 5, color = 'black'),
legend.position = 'top',
legend.key.size = unit(0.2, 'cm'),
legend.title = element_text(size=7, color = 'black'),
legend.text = element_text(size=7, color = 'black'),
axis.title.y = element_text(size = 7, color = 'black'),
axis.title.x = element_text(size = 7, color = 'black'),
title = element_text(size = 9))+
labs(title = "Umidade", y= "Umidade (%)")
p5<-ggplot(priCorte, aes(x = Tratamento, y = Area.Foliar, fill = Capim)) +
geom_boxplot(width = 0.07, position = position_dodge(width = 0.9))+
theme(axis.text.x = element_text(size = 5, color = 'black'),
axis.text.y = element_text(size = 5, color = 'black'),
legend.position = 'top',
legend.key.size = unit(0.2, 'cm'),
legend.title = element_text(size=7, color = 'black'),
legend.text = element_text(size=7, color = 'black'),
axis.title.y = element_text(size = 7, color = 'black'),
axis.title.x = element_text(size = 7, color = 'black'),
title = element_text(size = 9))+
labs(title = "Area Foliar", y= "Area Foliar (m2)")
#Umidade
p6<-ggplot(priCorte, aes(x = Tratamento, y = Umidade, fill = Capim)) +
geom_boxplot(width = 0.07, position = position_dodge(width = 0.9))+
theme(axis.text.x = element_text(size = 5, color = 'black'),
axis.text.y = element_text(size = 5, color = 'black'),
legend.position = 'top',
legend.key.size = unit(0.2, 'cm'),
legend.title = element_text(size=7, color = 'black'),
legend.text = element_text(size=7, color = 'black'),
axis.title.y = element_text(size = 7, color = 'black'),
axis.title.x = element_text(size = 7, color = 'black'),
title = element_text(size = 9))+
labs(title = "Umidade", y= "Umidade (%)")
#Perfilhos
p7<-ggplot(priCorte, aes(x = Tratamento, y = Perfilhos, fill = Capim)) +
geom_boxplot(width = 0.07, position = position_dodge(width = 0.9))+
theme(axis.text.x = element_text(size = 5, color = 'black'),
axis.text.y = element_text(size = 5, color = 'black'),
legend.position = 'top',
legend.key.size = unit(0.2, 'cm'),
legend.title = element_text(size=7, color = 'black'),
legend.text = element_text(size=7, color = 'black'),
axis.title.y = element_text(size = 7, color = 'black'),
axis.title.x = element_text(size = 7, color = 'black'),
title = element_text(size = 9))+
labs(title = "Número de Perfilhos")
ggsave("Outras.jpg",plot_grid(p5, p6, p7, ncol = 1))
# Dados ----
library(dplyr)
library(naniar)
# Analises ----
library(easyanova)
# Gráficos
library(ggplot2)
library(cowplot)
# Carregando o Dados
data <- read.csv("Dados.csv")
# Calculando Quartis e IQRs
quartilesMS <- quantile(data$MS, probs=c(.25, .75), na.rm = TRUE)
IQRMS <- IQR(data$MS, na.rm = TRUE)
quartilesCl <- quantile(data$Clorofila, probs=c(.25, .75), na.rm = TRUE)
IQRCl <- IQR(data$Clorofila, na.rm = TRUE)
quartilesUmi <- quantile(data$Umidade, probs=c(.25, .75), na.rm = TRUE)
IQRUmi <- IQR(data$Umidade, na.rm = TRUE)
quartilesArea <- quantile(data$Area.Foliar, probs=c(.25, .75), na.rm = TRUE)
IQRArea <- IQR(data$Area.Foliar, na.rm = TRUE)
quartilesPer <- quantile(data$Perfilhos, probs=c(.25, .75), na.rm = TRUE)
IQRPer <- IQR(data$Perfilhos, na.rm = TRUE)
# Calulando os Lower e Upper Values
LowerMS <- quartilesMS[1] - 1.5*IQRMS
UpperMS <- quartilesMS[2] + 1.5*IQRMS
LowerCl <- quartilesCl[1] - 1.5*IQRCl
UpperCl <- quartilesCl[2] + 1.5*IQRCl
LowerUmi <- quartilesUmi[1] - 1.5*IQRUmi
UpperUmi <- quartilesUmi[2] + 1.5*IQRUmi
LowerArea <- quartilesArea[1] - 1.5*IQRArea
UpperArea <- quartilesArea[2] + 1.5*IQRArea
LowerPer <- quartilesPer[1] - 1.5*IQRPer
UpperPer <- quartilesPer[2] + 1.5*IQRPer
# Removendo Outliers
data_sem_outliers <- data %>%
replace_with_na_at(.vars = c("Area.Foliar"),
condition = ~.x > UpperArea) %>%
replace_with_na_at(.vars = c("Area.Foliar"),
condition = ~.x < LowerArea) %>%
replace_with_na_at(.vars = c("MS"),
condition = ~.x < LowerMS) %>%
replace_with_na_at(.vars = c("MS"),
condition = ~.x > UpperMS) %>%
replace_with_na_at(.vars = c("Clorofila"),
condition = ~.x < LowerCl) %>%
replace_with_na_at(.vars = c("Clorofila"),
condition = ~.x > UpperCl) %>%
replace_with_na_at(.vars = c("Umidade"),
condition = ~.x < LowerUmi) %>%
replace_with_na_at(.vars = c("Umidade"),
condition = ~.x > UpperUmi) %>%
replace_with_na_at(.vars = c("Perfilhos"),
condition = ~.x < LowerPer) %>%
replace_with_na_at(.vars = c("Perfilhos"),
condition = ~.x > UpperPer)
data_sem_outliers$Corte[data_sem_outliers$Corte == 1] <- "Primeiro"
data_sem_outliers$Corte[data_sem_outliers$Corte == 2] <- "Segundo"
#Separando os Campins
Decumbens <- data_sem_outliers %>%
filter(Capim == "Decumbens")
Brizantha <- data_sem_outliers %>%
filter(Capim == "Brizantha")
#Separando os Cortes
priCorte <- data_sem_outliers %>%
filter(Corte == "Primeiro")
segCorte <- data_sem_outliers %>%
filter(Corte == "Segundo")
#Separando as espécies de Capim
priCorteDecu <- priCorte %>%
filter(Capim == "Decumbens")
priCorteBriza <- priCorte %>%
filter(Capim == "Brizantha")
segCorteDecu <- segCorte %>%
filter(Capim == "Decumbens")
segCorteBriza <- segCorte %>%
filter(Capim == "Brizantha")
Decumbens_graph <- Decumbens %>%
group_by(Tratamento, Corte) %>%
summarise(
media_MS = mean(MS, na.rm=TRUE),
media_Clorofila = mean(Clorofila, na.rm=TRUE),
limite_Superior_MS = mean(MS, na.rm=TRUE) + sd(MS, na.rm=TRUE),
limite_Superior_Cl = mean(Clorofila, na.rm=TRUE) + sd(Clorofila, na.rm=TRUE),
limite_Inferior_MS = mean(MS, na.rm=TRUE) - sd(MS, na.rm=TRUE),
limite_Inferior_Cl = mean(Clorofila, na.rm=TRUE) - sd(Clorofila, na.rm=TRUE)
)
Brizantha_graph <- Brizantha %>%
group_by(Tratamento, Corte) %>%
summarise(
media_MS = mean(MS, na.rm=TRUE),
media_Clorofila = mean(Clorofila, na.rm=TRUE),
limite_Superior_MS = mean(MS, na.rm=TRUE) + sd(MS, na.rm=TRUE),
limite_Superior_Cl = mean(Clorofila, na.rm=TRUE) + sd(Clorofila, na.rm=TRUE),
limite_Inferior_MS = mean(MS, na.rm=TRUE) - sd(MS, na.rm=TRUE),
limite_Inferior_Cl = mean(Clorofila, na.rm=TRUE) - sd(Clorofila, na.rm=TRUE)
)
p1 <- Decumbens_graph %>%
ggplot(aes(x = Tratamento, y = media_MS, fill = Corte))+
geom_bar(stat = "identity", position = "dodge")+
labs(y= "Massa Seca (g)")+
geom_errorbar(aes(ymin = limite_Inferior_MS, ymax = limite_Superior_MS), width = 0.2, position = position_dodge(.9))+
theme(axis.text.x = element_text(size = 8, color = 'black'),
axis.text.y = element_text(size = 8, color = 'black'),
legend.position = 'top',
legend.key.size = unit(0.2, 'cm'),
legend.title = element_text(size=10, color = 'black'),
legend.text = element_text(size=10, color = 'black'),
axis.title.y = element_text(size = 10, color = 'black'),
axis.title.x = element_text(size = 10, color = 'black'))
View(p1)
Decumbens_graph %>%
ggplot(aes(x = Tratamento, y = media_MS, fill = Corte))+
geom_bar(stat = "identity", position = "dodge")+
labs(y= "Massa Seca (g)")+
geom_errorbar(aes(ymin = limite_Inferior_MS, ymax = limite_Superior_MS), width = 0.2, position = position_dodge(.9))+
theme(axis.text.x = element_text(size = 8, color = 'black'),
axis.text.y = element_text(size = 8, color = 'black'),
legend.position = 'top',
legend.key.size = unit(0.2, 'cm'),
legend.title = element_text(size=10, color = 'black'),
legend.text = element_text(size=10, color = 'black'),
axis.title.y = element_text(size = 10, color = 'black'),
axis.title.x = element_text(size = 10, color = 'black'))
p2 <- Decumbens_graph %>%
ggplot(aes(x = Tratamento, y = media_Clorofila, fill = Corte))+
geom_bar(stat = "identity", position = "dodge")+
labs(y= "IRC")+
geom_errorbar(aes(ymin = limite_Inferior_Cl, ymax = limite_Superior_Cl), width = 0.2, position = position_dodge(.9))+
theme(axis.text.x = element_text(size = 8, color = 'black'),
axis.text.y = element_text(size = 8, color = 'black'),
legend.position = 'top',
legend.key.size = unit(0.2, 'cm'),
legend.title = element_text(size=10, color = 'black'),
legend.text = element_text(size=10, color = 'black'),
axis.title.y = element_text(size = 10, color = 'black'),
axis.title.x = element_text(size = 10, color = 'black'))
Decumbens_graph %>%
ggplot(aes(x = Tratamento, y = media_Clorofila, fill = Corte))+
geom_bar(stat = "identity", position = "dodge")+
labs(y= "IRC")+
geom_errorbar(aes(ymin = limite_Inferior_Cl, ymax = limite_Superior_Cl), width = 0.2, position = position_dodge(.9))+
theme(axis.text.x = element_text(size = 8, color = 'black'),
axis.text.y = element_text(size = 8, color = 'black'),
legend.position = 'top',
legend.key.size = unit(0.2, 'cm'),
legend.title = element_text(size=10, color = 'black'),
legend.text = element_text(size=10, color = 'black'),
axis.title.y = element_text(size = 10, color = 'black'),
axis.title.x = element_text(size = 10, color = 'black'))
ggsave("Decumbens.jpg", plot_grid(p1, p2, ncol = 1))
p3 <- Brizantha_graph %>%
ggplot(aes(x = Tratamento, y = media_MS, fill = Corte))+
geom_bar(stat = "identity", position = "dodge")+
labs(y= "Massa Seca (g)")+
geom_errorbar(aes(ymin = limite_Inferior_MS, ymax = limite_Superior_MS), width = 0.2, position = position_dodge(.9))+
theme(axis.text.x = element_text(size = 8, color = 'black'),
axis.text.y = element_text(size = 8, color = 'black'),
legend.position = 'top',
legend.key.size = unit(0.2, 'cm'),
legend.title = element_text(size=10, color = 'black'),
legend.text = element_text(size=10, color = 'black'),
axis.title.y = element_text(size = 10, color = 'black'),
axis.title.x = element_text(size = 10, color = 'black'))
p4 <- Brizantha_graph %>%
ggplot(aes(x = Tratamento, y = media_Clorofila, fill = Corte))+
geom_bar(stat = "identity", position = "dodge")+
labs(y= "IRC")+
geom_errorbar(aes(ymin = limite_Inferior_Cl, ymax = limite_Superior_Cl), width = 0.2, position = position_dodge(.9))+
theme(axis.text.x = element_text(size = 8, color = 'black'),
axis.text.y = element_text(size = 8, color = 'black'),
legend.position = 'top',
legend.key.size = unit(0.2, 'cm'),
legend.title = element_text(size=10, color = 'black'),
legend.text = element_text(size=10, color = 'black'),
axis.title.y = element_text(size = 10, color = 'black'),
axis.title.x = element_text(size = 10, color = 'black'))
ggsave("Brizantha.jpg",plot_grid(p3, p4,ncol = 1))
p5<-ggplot(priCorte, aes(x = Tratamento, y = Area.Foliar, fill = Capim)) +
geom_boxplot(width = 0.07, position = position_dodge(width = 0.9))+
theme(axis.text.x = element_text(size = 8, color = 'black'),
axis.text.y = element_text(size = 8, color = 'black'),
legend.position = 'top',
legend.key.size = unit(0.2, 'cm'),
legend.title = element_text(size=10, color = 'black'),
legend.text = element_text(size=10, color = 'black'),
axis.title.y = element_text(size = 10, color = 'black'),
axis.title.x = element_text(size = 10, color = 'black'),
title = element_text(size = 9))+
labs(title = "Area Foliar", y= "Area Foliar (m2)")
#Umidade
p6<-ggplot(priCorte, aes(x = Tratamento, y = Umidade, fill = Capim)) +
geom_boxplot(width = 0.07, position = position_dodge(width = 0.9))+
theme(axis.text.x = element_text(size = 8, color = 'black'),
axis.text.y = element_text(size = 8, color = 'black'),
legend.position = 'top',
legend.key.size = unit(0.2, 'cm'),
legend.title = element_text(size=10, color = 'black'),
legend.text = element_text(size=10, color = 'black'),
axis.title.y = element_text(size = 10, color = 'black'),
axis.title.x = element_text(size = 10, color = 'black'),
title = element_text(size = 9))+
labs(title = "Umidade", y= "Umidade (%)")
#Perfilhos
p7<-ggplot(priCorte, aes(x = Tratamento, y = Perfilhos, fill = Capim)) +
geom_boxplot(width = 0.07, position = position_dodge(width = 0.9))+
theme(axis.text.x = element_text(size = 8, color = 'black'),
axis.text.y = element_text(size = 8, color = 'black'),
legend.position = 'top',
legend.key.size = unit(0.2, 'cm'),
legend.title = element_text(size=10, color = 'black'),
legend.text = element_text(size=10, color = 'black'),
axis.title.y = element_text(size = 10, color = 'black'),
axis.title.x = element_text(size = 10, color = 'black'),
title = element_text(size = 9))+
labs(title = "Número de Perfilhos")
ggsave("Outras.jpg",plot_grid(p5, p6, p7, ncol = 1))
library(shiny); runApp('K-State/Senegal visualizing data app/Senegal-visualizing-data-app/Senegal App.R')
shiny::runApp('Conhecimento/Projetos/ARA/Guyri/Versão 2/Algortimos/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 2/Algortimos/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 2/Algortimos/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 2/Algortimos/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 2/Algortimos/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 2/Algortimos/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 2/Algortimos/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 2/Algortimos/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 2/Algortimos/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 2/Algortimos/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 2/Algortimos/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 2/Algortimos/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 2/Algortimos/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 2/Algortimos/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 2/Algortimos/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 2/Algortimos/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 2/Algortimos/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 2/Algortimos/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 2/Algortimos/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 2/Algortimos/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 2/Algortimos/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 2/Algortimos/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 2/Algortimos/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 2/Algortimos/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 2/Algortimos/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 2/Algortimos/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 2/Algortimos/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 2/Algortimos/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 2/Algortimos/Guyri')
shiny::runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
runApp('Conhecimento/Projetos/ARA/Guyri/Versão 3/Guyri')
